name: Run unittest
on:
  workflow_dispatch:
  push:
    paths:
      - "tests/**"
      - "firezone_client/**"
  pull_request:
    paths:
      - "tests/**"
      - "firezone_client/**"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      # get repo
      - uses: actions/checkout@v3

      # setup docker apps
      - uses: isbang/compose-action@v1.5.1
        with:
          compose-file: "./docker-compose.yml"

      - name: Migrate firezone database
        run: docker compose run --rm firezone bin/migrate

      - name: Create admin
        run: docker compose run --rm firezone bin/create-or-reset-admin

      - name: Create API token
        run: docker compose exec firezone bin/create-api-token > .token

      # setup python and run test
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #- name: Load cached venv
      #  id: cached-poetry-dependencies
      #  uses: actions/cache@v3
      #  with:
      #    path: .venv
      #    key: venv-unittest-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
      #  if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --with dev

      - name: Run pytest
        run: poetry run pytest -v
